{"version":3,"file":"static/webpack/static/development/pages/index.js.4cac5aee1aad6ec83b4f.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React from \"react\";\nimport faker from \"faker\";\nimport MobileDetect from \"mobile-detect\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport Card from \"../components/card\";\nimport Image from \"../components/image\";\nimport Carousel from \"react-multi-carousel\";\nimport '../style.css';\n\nimport Link from \"next/link\";\n\nconst styles = theme => ({\n  root: {\n    textAlign: \"center\"\n  }\n});\n\nclass Index extends React.Component {\n  static getInitialProps({ req, isServer }) {\n    let userAgent;\n    let deviceType;\n    if (req) {\n      userAgent = req.headers[\"user-agent\"];\n    } else {\n      userAgent = navigator.userAgent;\n    }\n    const md = new MobileDetect(userAgent);\n    if (md.tablet()) {\n      deviceType = \"tablet\";\n    } else if (md.mobile()) {\n      deviceType = \"mobile\";\n    } else {\n      deviceType = \"desktop\";\n    }\n    return { deviceType };\n  }\n  render() {\n    const { classes } = this.props;\n    const images = [\n      faker.image.imageUrl(),\n      faker.image.fashion(),\n      faker.image.people(),\n      faker.image.nature(),\n      faker.image.city()\n    ];\n    const fakerData = Array(5)\n      .fill(0)\n      .map((item, index) => {\n        return {\n          image: images[index],\n          headline: faker.lorem.sentence(),\n          description: faker.lorem.sentences(3, 3)\n        };\n      });\n    const responsive = {\n      desktop: {\n        breakpoint: { max: 3000, min: 1024 },\n        items: 1\n      },\n      tablet: {\n        breakpoint: { max: 1024, min: 464 },\n        items: 1\n      },\n      mobile: {\n        breakpoint: { max: 464, min: 0 },\n        items: 1\n      }\n    };\n    return (\n      <div className={classes.root}>\n        <Carousel\n          /*\n          disableSwipeOnMobile\n          disableDrag\n          */\n          responsive={responsive}\n          forSSR\n          containerClassName='container'\n          slidesToSlide={1}\n          infinite={true}\n          deviceType={this.props.deviceType}\n        >\n          {fakerData.map(card => {\n            return <Card {...card} />;\n          })}\n        </Carousel>\n\n        <Carousel\n          /*\n          disableSwipeOnMobile\n          disableDrag\n          */\n          responsive={responsive}\n          forSSR\n          slidesToSlide={1}\n          infinite={true}\n          containerClassName='container'\n          itemClassName='image-item'\n          deviceType={this.props.deviceType}\n        >\n          {fakerData.map(card => {\n            return <Image url={card.image} alt={card.headline} />;\n          })}\n        </Carousel>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(Index);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AADA;AADA;AAAA;AACA;AAKA;;;;;;;;;;;;;AAmBA;AAAA;AAEA;AAOA;AAGA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAFA;AATA;AAcA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;;AADA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;;;AAxFA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;AAlBA;AACA;AA2FA;;;;A","sourceRoot":""}